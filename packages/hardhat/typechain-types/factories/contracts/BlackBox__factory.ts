/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
<<<<<<< HEAD
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { BlackBox, BlackBoxInterface } from '../../contracts/BlackBox';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
=======
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackBox, BlackBoxInterface } from "../../contracts/BlackBox";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
<<<<<<< HEAD
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'difficulty',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
=======
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "difficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'getScoreForUserId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
=======
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getScoreForUserId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'removeScoreForUserId',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
=======
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "removeScoreForUserId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'resetUserStart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
=======
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "resetUserStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_difficulty',
        type: 'uint256',
      },
    ],
    name: 'setDifficulty',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
=======
        internalType: "uint256",
        name: "_difficulty",
        type: "uint256",
      },
    ],
    name: "setDifficulty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'start',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
=======
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_score',
        type: 'uint256',
      },
    ],
    name: 'submitScore',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'success',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
=======
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
    ],
    name: "submitScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "success",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
=======
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'usersList',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
=======
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usersList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
  {
    inputs: [
      {
<<<<<<< HEAD
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'usersScore',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
=======
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usersScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
>>>>>>> 6d267f1 (add hardhat tests)
  },
];

const _bytecode =
<<<<<<< HEAD
  '';

type BlackBoxConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlackBoxConstructorParams,
=======
  "0x608060405234801561001057600080fd5b5061002d61002261005560201b60201c565b61005d60201b60201c565b60146001819055506000600460006101000a81548160ff021916908315150217905550610121565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bce806101306000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806368fc41e21161008c5780638da5cb5b116100665780638da5cb5b146101fe578063913ff83d1461021c57806395805dad14610238578063f2fde38b14610254576100cf565b806368fc41e2146101bc578063715018a6146101d85780638358ba08146101e2576100cf565b80630b93381b146100d457806316e0683f146100f257806319cae46214610122578063502aa3b51461014057806351ccb08414610170578063602512e1146101a0575b600080fd5b6100dc610270565b6040516100e991906108c9565b60405180910390f35b61010c60048036038101906101079190610788565b610283565b6040516101199190610964565b60405180910390f35b61012a6102a0565b6040516101379190610964565b60405180910390f35b61015a60048036038101906101559190610788565b6102a6565b6040516101679190610964565b60405180910390f35b61018a60048036038101906101859190610788565b6102be565b6040516101979190610964565b60405180910390f35b6101ba60048036038101906101b59190610788565b6102d6565b005b6101d660048036038101906101d19190610788565b61035c565b005b6101e0610376565b005b6101fc60048036038101906101f791906107b5565b6103fe565b005b6102066104ee565b60405161021391906108ae565b60405180910390f35b61023660048036038101906102319190610788565b610517565b005b610252600480360381019061024d9190610788565b610531565b005b61026e6004803603810190610269919061075b565b61056d565b005b600460009054906101000a900460ff1681565b600060036000838152602001908152602001600020549050919050565b60015481565b60026020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6102de610665565b73ffffffffffffffffffffffffffffffffffffffff166102fc6104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034990610924565b60405180910390fd5b8060018190555050565b600360008281526020019081526020016000206000905550565b61037e610665565b73ffffffffffffffffffffffffffffffffffffffff1661039c6104ee565b73ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610924565b60405180910390fd5b6103fc600061066d565b565b60006002600084815260200190815260200160002054905060026000848152602001908152602001600020600090556000811415610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610944565b60405180910390fd5b6000814261047f91906109c1565b905060015481846104909190610990565b106104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c790610904565b60405180910390fd5b82600360008681526020019081526020016000208190555050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260008281526020019081526020016000206000905550565b60004290508060026000848152602001908152602001600020819055506000600460006101000a81548160ff0219169083151502179055505050565b610575610665565b73ffffffffffffffffffffffffffffffffffffffff166105936104ee565b73ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610924565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610659576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610650906108e4565b60405180910390fd5b6106628161066d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061074081610b6a565b92915050565b60008135905061075581610b81565b92915050565b60006020828403121561077157610770610a9b565b5b600061077f84828501610731565b91505092915050565b60006020828403121561079e5761079d610a9b565b5b60006107ac84828501610746565b91505092915050565b600080604083850312156107cc576107cb610a9b565b5b60006107da85828601610746565b92505060206107eb85828601610746565b9150509250929050565b6107fe816109f5565b82525050565b61080d81610a07565b82525050565b600061082060268361097f565b915061082b82610aa0565b604082019050919050565b6000610843600b8361097f565b915061084e82610aef565b602082019050919050565b600061086660208361097f565b915061087182610b18565b602082019050919050565b6000610889601d8361097f565b915061089482610b41565b602082019050919050565b6108a881610a33565b82525050565b60006020820190506108c360008301846107f5565b92915050565b60006020820190506108de6000830184610804565b92915050565b600060208201905081810360008301526108fd81610813565b9050919050565b6000602082019050818103600083015261091d81610836565b9050919050565b6000602082019050818103600083015261093d81610859565b9050919050565b6000602082019050818103600083015261095d8161087c565b9050919050565b6000602082019050610979600083018461089f565b92915050565b600082825260208201905092915050565b600061099b82610a33565b91506109a683610a33565b9250826109b6576109b5610a6c565b5b828204905092915050565b60006109cc82610a33565b91506109d783610a33565b9250828210156109ea576109e9610a3d565b5b828203905092915050565b6000610a0082610a13565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f446f6e2774206368656174000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f506c656173652c207369676e2067616d65207374617274206669727374000000600082015250565b610b73816109f5565b8114610b7e57600080fd5b50565b610b8a81610a33565b8114610b9557600080fd5b5056fea2646970667358221220bd47f4540c2e657b7549d4e026e74399b412b9c31ddb9bd28bc4b310f37f150764736f6c63430008070033";

type BlackBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlackBoxConstructorParams
>>>>>>> 6d267f1 (add hardhat tests)
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlackBox__factory extends ContractFactory {
  constructor(...args: BlackBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

<<<<<<< HEAD
  override deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BlackBox> {
    return super.deploy(overrides || {}) as Promise<BlackBox>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
=======
  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackBox> {
    return super.deploy(overrides || {}) as Promise<BlackBox>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
>>>>>>> 6d267f1 (add hardhat tests)
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlackBox {
    return super.attach(address) as BlackBox;
  }
  override connect(signer: Signer): BlackBox__factory {
    return super.connect(signer) as BlackBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackBoxInterface {
    return new utils.Interface(_abi) as BlackBoxInterface;
  }
<<<<<<< HEAD
  static connect(address: string, signerOrProvider: Signer | Provider): BlackBox {
=======
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackBox {
>>>>>>> 6d267f1 (add hardhat tests)
    return new Contract(address, _abi, signerOrProvider) as BlackBox;
  }
}
