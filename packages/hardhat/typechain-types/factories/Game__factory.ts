/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Game, GameInterface } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_box",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "start",
        type: "bool",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Game.Player[]",
        name: "players",
        type: "tuple[]",
      },
    ],
    name: "NewScore",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
        ],
        internalType: "struct Game.Player[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
    ],
    name: "submitScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b84380380610b8483398181016040528101906100329190610094565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180819055505061010f565b60008151905061008e816100f8565b92915050565b6000602082840312156100aa576100a96100f3565b5b60006100b88482850161007f565b91505092915050565b60006100cc826100d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610101816100c1565b811461010c57600080fd5b50565b610a668061011e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806338ee821b1461006757806353ed514314610097578063aff0b297146100b5578063be9a6555146100d1578063d299aa07146100db578063f71d96cb1461010b575b600080fd5b610081600480360381019061007c919061060e565b61013c565b60405161008e9190610855565b60405180910390f35b61009f610154565b6040516100ac91906107f6565b60405180910390f35b6100cf60048036038101906100ca919061063b565b6101c7565b005b6100d9610435565b005b6100f560048036038101906100f0919061060e565b610598565b6040516101029190610855565b60405180910390f35b6101256004803603810190610120919061063b565b6105b0565b604051610133929190610870565b60405180910390f35b60036020528060005260406000206000915090505481565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156101be57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610178565b50505050905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638358ba0882846040518363ffffffff1660e01b8152600401610266929190610870565b600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b5050505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006040518060400160405280600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152509050600481908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090557f96bed669ba2036cc25b69d1ebfdfa3d3ae2ea025967d7e3b01e9ad2255081d4a60046040516104289190610818565b60405180910390a1505050565b600154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395805dad600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518263ffffffff1660e01b81526004016105139190610855565b600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b50505050600180600082825461055791906108ff565b925050819055507f898a393a858c3e53a0c17028b22a4244ad013a6a5432ead1ba081e13f4053199600160405161058e919061083a565b60405180910390a1565b60026020528060005260406000206000915090505481565b600481815481106105c057600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000813590506105f381610a02565b92915050565b60008135905061060881610a19565b92915050565b600060208284031215610624576106236109f0565b5b6000610632848285016105e4565b91505092915050565b600060208284031215610651576106506109f0565b5b600061065f848285016105f9565b91505092915050565b60006106748383610762565b60408301905092915050565b600061068c8383610791565b60408301905092915050565b60006106a3826108be565b6106ad81856108ee565b93506106b883610899565b8060005b838110156106e95781516106d08882610668565b97506106db836108d4565b9250506001810190506106bc565b5085935050505092915050565b6000610701826108c9565b61070b81856108ee565b9350610716836108a9565b8060005b83811015610746578161072d8882610680565b9750610738836108e1565b92505060018101905061071a565b5085935050505092915050565b61075c81610971565b82525050565b60408201600082015161077860008501826107d8565b50602082015161078b60208501826107d8565b50505050565b6040820160008083015490506107a6816109a7565b6107b360008601826107d8565b50600183015490506107c4816109a7565b6107d160208601826107d8565b5050505050565b6107e18161099d565b82525050565b6107f08161099d565b82525050565b600060208201905081810360008301526108108184610698565b905092915050565b6000602082019050818103600083015261083281846106f6565b905092915050565b600060208201905061084f6000830184610753565b92915050565b600060208201905061086a60008301846107e7565b92915050565b600060408201905061088560008301856107e7565b61089260208301846107e7565b9392505050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b6000602082019050919050565b6000600282019050919050565b600082825260208201905092915050565b600061090a8261099d565b91506109158361099d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561094a576109496109c1565b5b828201905092915050565b6000819050919050565b600061096a8261097d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ba6109b5836109f5565b610955565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160001c9050919050565b610a0b8161095f565b8114610a1657600080fd5b50565b610a228161099d565b8114610a2d57600080fd5b5056fea2646970667358221220b4c557eb08bb89f7ec9c3e36c837d332ef7f9c0c89ca7deb384e9c06ad430d5564736f6c63430008070033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Game";
  }

  deploy(
    _box: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Game> {
    return super.deploy(_box, overrides || {}) as Promise<Game>;
  }
  getDeployTransaction(
    _box: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_box, overrides || {});
  }
  attach(address: string): Game {
    return super.attach(address) as Game;
  }
  connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static readonly contractName: "Game";
  public readonly contractName: "Game";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
